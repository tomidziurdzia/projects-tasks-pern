1- Instalo package.json
npm init -y

2- Instalo las siguientes dependencias
npm i express morgan sequelize pg pg-hstore

3- Creo la carpeta src. Dentro de esta carpeta voy a crear dos archivos:
index.js quien va a ser el encargado de levantar la app
app.js quien va a tener la configuracion de express

app.js

import express from "express";
const app = express();
export default app;

index.js
import app from "./app.js";
app.listen(4000);

4- En el package.json agrego la propiedad "type" : "module"
Instalo la dependencia npm i -D nodemon para no tener que estar reiniciando el server por cada cambio que haga
npx nodemon src/index.js para ejecutar

Modifico el package.json
"scripts": {
"dev": "nodemon src/index.js"
},

Uso el comando npm run dev para levantar el servidor

5- Creo carpetas dentro de src llamadas db, routes, controllers, models
La carpeta db va a contener un archivo llamado db.js. Este va a tener la conexion a la base de datos

6- Instalo npm i dotenv y creo la base de datos en postgres y ahora tengo que relacionarla con el proyecto
Creo un archivo .env para cargar los datos

Hago la conexion de la base de datos con la app

7- Creo los modelos Task y Project que van a ser mis tablas de la DB

8- Creo las rutas, las relaciono con los modelos y despues tengo que importarlas a index.js 

9- Instalo cors para unir back con front 
npm i cors


CONFIGURANDO REACT
1- npm create vite@latest
cd client
npm install

2- npm i react-router-dom

3- Reset App.jsx

4- Cree un par de componentes. Seguro despues modifique algo

5- Instalo styled-components
npm i -S styled-components